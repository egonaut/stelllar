# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Server implements BaseEntity {
  id: ID!
  createdAt: DateTime!
  roles: [Role!]!
}

interface BaseEntity {
  id: ID!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Role implements BaseEntity {
  id: ID!
  createdAt: DateTime!
  name: String!
  isDefault: Boolean!
  color: HexColorCode
  permissions: [ServerPermission!]!
}

"""
A field whose value is a hex color code: https://en.wikipedia.org/wiki/Web_colors.
"""
scalar HexColorCode @specifiedBy(url: "https://en.wikipedia.org/wiki/Web_colors")

enum ServerPermission {
  ManageChannels
  PrivateChannels
  RestrictedChannels
  ManageServer
  ManageUsers
  SendMessages
  ManageMessages
  ManagePosts
  ManageComments
  ManageFolders
  AddPostToFolder
  DisplayRoleSeparately
  Admin
}

type Group implements BaseEntity {
  id: ID!
  createdAt: DateTime!
  users: [User!]!
}

type Folder implements BaseEntity {
  id: ID!
  createdAt: DateTime!
  name: String!
  description: String
  avatarUrl: String
  owner: User
  postCount: NonNegativeInt!
  followerCount: NonNegativeInt!
  isFollowing: Boolean!
  isCollaborative: Boolean!
  visibility: FolderVisibility!
}

"""Integers that will have a value of 0 or more."""
scalar NonNegativeInt

enum FolderVisibility {
  Public
  Friends
  Private
  Unlisted
}

type User implements BaseEntity {
  id: ID!
  createdAt: DateTime!
  username: String!
  email: EmailAddress
  lastLoginAt: DateTime
  lastMessageAt: DateTime
  avatarUrl: String
  onlineStatus: OnlineStatus!
  isAdmin: Boolean!
  color: Color!
  isCurrentUser: Boolean!
  groups: [Group!]!
  relatedUsers: [User!]!
  folders: [Folder!]!
  servers: [Server!]!
  unreadCount: NonNegativeInt!
  showChat: Boolean!
  relationshipStatus: RelationshipStatus!
  isOg: Boolean!
  isStaff: Boolean!
  isOnline: Boolean!
}

"""
A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/.
"""
scalar EmailAddress @specifiedBy(url: "https://www.w3.org/Protocols/rfc822/")

enum OnlineStatus {
  Online
  Away
  DoNotDisturb
  Offline
}

enum Color {
  Red
  Yellow
  Green
  Blue
  Indigo
  Purple
  Pink
}

enum RelationshipStatus {
  None
  FriendRequestOutgoing
  FriendRequestIncoming
  Friends
  Blocking
  Blocked
}

type Query {
  sayHello: String!
}

type Mutation {
  createAccount(input: CreateAccountInput!): User!
}

input CreateAccountInput {
  username: String!
  email: EmailAddress
  password: String!
}